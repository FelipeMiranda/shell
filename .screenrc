# ~/.screenrc
# vim: ft=sh
#
# explicações sobre as configurações e utilização geral do screen
# estão em http://aurelio.net/coluna
#
# 2015-05-30 quirinobytes (a) gmail com

# dica: zombie
#   :zombie kr
# faz com que cada janela morta fique esperando uma ação
# (Kill ou Restore). útil pra ver os erros que aconteceram.
#

### explanation about color codes:
#
# sorendition <attribute> <color>
# sorendition ab cd  //  a,c=bg  b,d=fg
#
#  ab             c&d       c&d
#  00 normal       0 black   4 blue 
#  1- invert       1 red     5 magenta
#  25 bright       2 green   6 cyan
#  3- 1+2          3 brown   7 silver
#
# * attributes are cumulative, so a=3 is invert+bright
# * colors use the same codes for bg & fg colors,
#   so cd=22 all you get is green, text unreadable
# 
# examples:
#  00 02 - black bg (0), green fg (2), no attributes (00)
#  20 30 - brown bg (3), black fg (0), bright bg (2) -> turns yellow
#  35 74 - silver bg (7), blue fg (4), invert, bright bg (3), bright fg (5)

# barra azul e amarelo, com hora, data e janelas
msgwait 3
sorendition 15 43 # Estrutura em amarelo
sorendition 05 43
hardstatus alwayslastline " %c | %Y%m%d |  %w | F1=vi->miniman F4=close F5= -- F6= | F7= - F8= + F9=TAB S+F9=kill F10=(vi/mc)->exit&save F11=deploy F12=>>"

# barra verde e preto, com códigos de cores literais
#hardstatus alwayslastline "\033[m\033[42;30m%c\033[m \033[42;30m%Y%m%d\033[m \033[42;30m %w \033[m"

vbell on                                 # bipe visual
bell "  %n %t apitando!"                 # msg bipe
autodetach on                            # -
startup_message off                      # msg mala
shell -$SHELL                            # nem lembro
#bufferfile $TMPFILE                     # arq tmp
nethack on                               # msgs estilo nethack
#defmonitor on                           # monitorar QUALQUER atividade
#bind \034 hardcopy                      # mapeia PrintScreen
caption splitonly "%2n %t"               # barra de janelas
#fazendo salvar o layout das regions em caso de Detach/RE-Atach nao perder os regions/windows
layout save default
#Definindo um SCROLL BACK violentamente GRANDE porem mais leennntoooo.
defscrollback 100000

# programas carregados automaticamente
bind c screen 1                          # janela nova
bind L screen -t www 6 lynx -book        # navegador
bind M screen -t mp3 9 mp3 /mp3/punk     # mp3

# cadeias comuns que tem que digitar toda hora, nome, email, etc
# útil pra preencher formalários online...
bind N stuff "$NOME"
bind D stuff $DATA
bind I stuff $ICQ
#bindkey -t  ec stuff $EMAILC
#bindkey -t  ev stuff $EMAILV
#bindkey -t  uc stuff $URLC
#bindkey -t  uv stuff $URLV
#
# DA PAU >>
# #
#bindkey -t  ur stuff http://txt2regex.sourceforge.net
#bindkey -t  ut stuff http://txt2tags.sourceforge.net
#bindkey -t  uz stuff http://funcoeszz.codigolivre.org.br
# << PAU


bind o screen 0 /usr/bin/play $HOME/pessoal/O-Oh.wav

#register c "$EMAILC"
#register v "$EMAILV"
#register c "$URLC"
#register v "$URLV"
#register z "$URLC/programas/bash/funcoesZZ"
#register r "http://txt2regex.sourceforge.net"
#register t "http://txt2tags.sourceforge.net"
#bind E paste

# to shit+(page up|page down) work
bind h hardstatus ignore
bind g hardstatus alwayslastline


# mapeamentos para fazer redimensionamento de janelas divididas
# com o Split.
#bind 'R' wrap
bind 'r' resize
bind '+' resize +5
bind '-' resize -5


# enquanto não resolver o problema do hardcopy com hardstatus
#hardcopy_append on
#bind h

# segurança: desligar algumas tecla perigosas
bind k
bind ^k
#bind '^\' trocado por: escape \0, parece que funciona!
#escape ^\0
bind z
bind ^z
bind x

# e aqui fica o kill
bind 'K' kill

#colocar \033k\033\134 no começo do PS1
# permite prompt colorido mas bagunça quando chega na extrema direita
# PAU >>
#####shelltitle '] |_'
######################### <<PAU

# para colar no vim sem "identar"
# ATENÇÃO: é ^a^] 
register [ "\033:set   paste a"
register ] "\033:set nopaste a"
bind ^] paste [.]


### do /etc/screenrc
termcap  facit|vt100|xterm LP:G0
terminfo facit|vt100|xterm LP:G0
#the vt100 description does not mention "dl". *sigh*
termcap  vt100 dl=5\E[M
terminfo vt100 dl=5\E[M
###

# disprando programas automaticamente ao iniciar o screen

#@# ### DHCP ### ### DHCP ### ### DHCP ### ### DHCP ###
#screen -t icq          1 bash -c ". ~/.bashrc ; icq"
#screen -t irc          2 BitchX -b verde irc.openprojects.net
#screen -t freshmeat    3 lynx http://www.freshmeat.net
#screen -t zznoticias   4 bash -c "funcoeszz zznoticiaslinux; echo; echo ---FIM---; read"
#screen -t artistas     5 bash -c "funcoeszz zzcasadosartistas; echo; echo ---FIM---; read"
#select 1
#
#





#bindkey -k k1 screen  	# F1 # Cria uma sessao = Crtl-a + c
#bindkey -k k2 		# F2 # JA Mapeado para Colocar e tirar coment[arios no .vimrc
#bindkey -k k3 		# F3 # JA Mapeado para Colocar e tirar coment[arios no .vimrc
bindkey -k k4 remove  	# F4 # Desliga a exiubicao da Janela

bindkey -k k5 eval split focus screen    # F5 # Cria uma divisao horizontal
bindkey -k k6 eval 'split -v' focus screen # F6 # Cria uma divisao vertical
bindkey -k k7 resize -1 # F7 # Aumenta o tamando da Janela Atual
bindkey -k k8 resize +1 # F8 # Dominui o tamanho da Janela atual
bindkey -k k9 focus     # F9 # Pula para proxima janela
#bindkey "^[[21~" next 	# F10# O LEGAL SERIA Control TAB no lugar de F9


# BIND F11 -> DEPLOY 
# F11 = FAZER O DEPLOY DO COMANDO ABAIXO, Ou linha de programa gravavel, quando melhorarmos a ideia. rode oq quizer como F11.
bindkey -k F1 screen -l 1 ssh dev1 'puppet agent -t ; if [ $? == 1 ]; then echo pressione enter... ; read -n 1 ; fi '
bindkey -k F2 prev      # F12# Usado no Vim para sair do arquivo salvando caso exista modificacoes, por esse motivo nao usei para kill aqui

# easier scroll
#bindkey "^[OA" eval 'copy' 'stuff ^b'  # PgUp | Enter copy/scrollback mode and page up
#bindkey "^[OB" eval 'copy' "stuff ^f'  # PgDown | Enter copy/scrollback mode and page down


# SHIFT + F9 
bindkey "^[[33~" eval kill         # F11#  Encerrar o screen com todas as janelas e sessoes juntos, nao sei pq so kill nao funciona

#Um dos melhores exemplos para tentar entender a sequencia de execucao com ####  >>>> eval <<<<<  ##### atencao no final com echo.
# ja salvar e ja recarregar o .screenrc com Crtl+a R, MUITO bom principalmente quando edita ele e quer ja ir testando. vamos Crtl+a R
bind R eval 'stuff "^[:w!^M"' "source $HOME/.screenrc" "echo '.screenrc salvo e carregado com sucesso!  Yeahh «®» «®» «®»'"
#"echo '.screenrc Saved and Re-Loaded yeahh!'"






# Scroll up
#bindkey -d "^[[5S" eval copy "stuff 5\025"
#bindkey -m "^[[5S" stuff 5\025
#
# # Scroll down
#bindkey -d "^[[5T" eval copy "stuff 5\004"
#bindkey -m "^[[5T" stuff 5\004
#
# # Scroll up more
#bindkey -d "^[[25S" eval copy "stuff \025"
#bindkey -m "^[[25S" stuff \025
#
# # Scroll down more
#bindkey -d "^[[25T" eval copy "stuff \004"
#bindkey -m "^[[25T" stuff \004








#^$#MAPEAMENTO DAS TECLAS F1 ATE F12 POR CODIGO, MELHOR IMPOSSIVEL
#^$bindkey "^[[11~" select 1
#^$bindkey "^[[12~" select 2
#^$bindkey "^[[13~" select 3
#^$bindkey "^[[14~" select 4
#^$bindkey "^[[15~" select 5
#^$bindkey "^[[17~" select 6
#^$bindkey "^[[18~" select 7
#^$bindkey "^[[19~" select 8
#^$bindkey "^[[20~" select 9
#^$bindkey "^[[21~" select 10
#^$bindkey "^[[23~" select 11
#^$bindkey "^[[24~" select 12








# debug         -       debugging info is written to /tmp/debug/
# # dumptermcap   -       Termcap entry written to "/home/srot/tmp/.screen/.termcap".
# # info          -       (1,3)/(270,37)+5000 -(-)flow bce UTF-8 6(hellopwd)
# # dinfo         -       (270,77) UTF-8 color iso2022
#
# # ===============================================================
# # Messages
# # ===============================================================
# # They are also the names of the commands that set the respective messages.  In every message there can be "meta
# # strings" which are replaced by values.  A meta string starts with a percent sign and is then followed by one
# # of the following letters: aAcCdDfFhHlmMnstuwWyY The meta strings usually refer to the current
# # date and time or to a window title or number. There are also some specials like embedded branches (with %?),
# # color codes (with %{xy}) and padding (with %=, %<, %>). you can find their description in the manual in section  "STRING ESCAPES":
# #
# #  %%      percent sign (the escape character itself)
# #  %f      flags of the window
# #  %F      sets %? to true if the window has the focus
# #  %h      hardstatus of the window
# #  %H      hostname of the system
# #  %l      current load of the system
# #  %n      window number
# #  %t      window title
# #  %u      all other users on this window
# #  %w      all window numbers and names.
# #  %-w     all window numbers up to the current window
# #  %+w     all window numbers after the current window
# #  %W      all window numbers and names except the current one
# #
# #  DATE VARS -- USELESS!
# #  %a      either 'am' or 'pm' - according to the current time
# #  %A      either 'AM' or 'PM' - according to the current time
# #  %c      current time HH:MM in 24h format
# #  %C      current time HH:MM in 12h format
# #  %d      day number - number of current day
# #  %D      Day's name - the weekday name of the current day
# #  %m      month number
# #  %M      month name
# #  %s      seconds
# #  %y      last two digits of the year number
# #  %Y      full year number
# # ===============================================================
# vbell off                               # I like to hear the beep.
# activity "%c activity -> %n%f %t^G"     # ^G makes it beep
# bell "%c bell -> %n%f %t^G"             # likewise
#
# ###########################################################################################################################
#  #
#   # TERMINAL CONTROL
#    # ae: Standout          # ct: Initialization    # es: Status Line
#     # AL: Insdel Line       # cv: Cursor Motion     # ff: Cursor Motion
#      # al: Insdel Line       # da: Scrolling         # fs: Status Line
#      # am: Wrapping          # dB: Pad Specs         # gn: Basic
#      # as: Standout          # db: Scrolling         # hc: Basic
#      # bc: Cursor Motion     # dC: Pad Specs         # hd: Half-Line
#      # bl: Bell              # DC: Insdel Char       # ho: Cursor Motion
#      # bs: Cursor Motion     # dc: Insdel Char       # hs: Status Line
#      # bt: Cursor Motion     # dF: Pad Specs         # hu: Half-Line
#      # bw: Cursor Motion     # DL: Insdel Line       # hz: Basic
#      # CC: Basic             # dl: Insdel Line       # i1: Initialization
#      # cd: Clearing          # dm: Insdel Char       # i3: Initialization
#      # ce: Clearing          # dN: Pad Specs         # IC: Insdel Char
#      # ch: Cursor Motion     # DO: Cursor Motion     # ic: Insdel Char
#      # cl: Clearing          # do: Cursor Motion     # if: Initialization
#      # CM: Cursor Motion     # ds: Status Line       # im: Insdel Char
#      # cm: Cursor Motion     # dT: Pad Specs         # in: Insdel Char
#      # co: Screen Size       # ec: Clearing          # ip: Insdel Char
#      # cr: Cursor Motion     # ed: Insdel Char       # is: Initialization
#      # cS: Scrolling         # ei: Insdel Char       # it: Initialization
#      # cs: Scrolling         # eo: Basic
#      #
#      termcapinfo * hs@
#
#      ###########################################################################################################################
#      # COLOR:  colors codes are combinations of [attribute modifier] [color description]
#      # the manual talks of "attribute/color modifiers".
#      #
#      # 0 Black             .    leave color unchanged
#      # 1 Red               b    blue
#      # 2 Green             c    cyan
#      # 3 Brown / yellow    d    default color
#      # 4 Blue              g    green           b    bold
#      # 5 Purple            k    blacK           B    blinking
#      # 6 Cyan              m    magenta         d    dim
#      # 7 White             r    red             r    reverse
#      # 8 unused/illegal    w    white           s    standout
#      # 9 transparent       y    yellow          u    underline
#      #
#      # note: "dim" is not mentioned in the manual.
#      #hardstatus string "%-Lw%{= G0}%50>%n%f* %t%{-}%+Lw%<"
#
#      #hardstatus string "%?%F%{-b bc}%:%{-b bb}%?%C|%D|%M %d|%H|%0`%?%F%{+u wb}%? %L=%-Lw%45>%{+b by}%n%f* %t%{-}%+Lw%-0<"
#
#      #yaption always "%?%F%{.R.}%?%3n %t%? [%h]%?"
#      #caption always "%?%F%{-b bc}%:%{-b bb}%?%C|%D|%M %d|%H|%1`%?%F%{+u wb}%? %L=%-Lw%45>%{+b by}%n%f* %t%{-}%+Lw%-0<"
#      #hardstatus alwayslastline
#      #hardstatus string "%?%F%{-b bc}%:%{-b bb}%?%C|%D|%M %d|%H|%1`%?%F%{+u wb}%? %L=%-Lw%45>%{+b kG}%n%f* %t%{-}%+Lw%-0<"
#      hardstatus alwayslastline "[%02c] %`%-w%{=b bw}%n %t%{-}%+w"
#      # Make screen messages stand out a little more - black on bright green.
#      #sorendition "= kG"
#      #caption always "%{.wB}%-w%{.bW}%n %t%{-}%+w %=%{..Lw} %H %{..b} %m/%d %C%a "
#      caption always "%{cK}$LOGNAME %{bK}(%d %M %Y, %c) %{-}%{bW} %-w%{bW}%50>%{= wb}%n%f %t%{-}%+w%< %{-}"
#
#
#
#      ###########################################################################################################################
#      #
#      # default windows
#      # L - LOGGING
#      # l - log to utmp
#      # ln - nolog to utmp
#      # O - better vt100 emul
#      # a - all terminal caps
#      # A - resize
#      # h - scrol lines
#
