#!/bin/bash

source ~/shell/colors.sh

function exibe_versao(){

	DATA=`cat $CDSHELL/backup/data_ultima_instalacao.txt`
	echo -en "\n$DATA\n"
}


function assistir_versao {
ZERO=''
VAR=''
VAR=$1
begin=$(date +%s)
echo -en " Exibindo continuamente...Pressione $green 'q' $normal para sair!"
while true; do
   now=$(date +%s)
   diff=$(($now - $begin))
   mins=$(($diff / 60))
   secs=$(($diff % 60))
   hours=$(($diff / 3600))
   days=$(($diff / 86400))

   # \r  is a "carriage return" - returns cursor to start of line
   # with \33[2K we clear the current line
   printf "\33[2K\r%3d Days, %02d:%02d:%02d" $days $hours $mins $secs
   exibe_versao
   if [ ! $VAR != '' ] ; then
	sleep 1 
   else
	sleep $1 
   fi

   #like a tput reset   (Limpar tela)
   echo -e '\0033\0143'

   # -n 1 to get one character at a time, -t 0.1 to set a timeout 
   read -n 1 -t 0.1 input                  # so read doesn't hang
   if [[ $input = "q" ]] || [[ $input = "Q" ]] 
   then
      echo # to get a newline after quitting
      break
   fi
done
}

function resetar_e_instalar_ultima_versao(){
	cdshell
	git checkout -f
	cdshell install
}




case $1 in

   "install" | "-i" | "--install") cd $CDSHELL ; . install.sh
         ;;

   "-v") echo -en "Versão do comando cdshell: 1.0.0 \n"
	 echo -en "Versão do Pacote CDSHELL: $green `cat $CDSHELL/backup/versao_ultima_instalacao.txt`\n $normal"
         ;;

   "--help") echo "Digite miniman cdshell"
	 ;;

   "-w") assistir_versao $2
	;;

   "reset"|"--reset"|"-r") resetar_e_instalar_ultima_versao
	;;

   *) exibe_versao 
	if [ ! -z $1  ]; then
		echo -en "O comando $red $1 $normal não existe."
	fi
      exit 1
      ;;
	
esac


