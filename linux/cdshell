#!/bin/bash

source ~/shell/colors.sh

function exibe_versao_cdshell(){
		DATA=`cat $CDSHELL/backup/data_ultima_instalacao.txt`
		echo -en "\n$DATA"
}

function exibe_versao_git_local_version(){
V=`git rev-list HEAD | wc -l`
VERSION=`echo "scale=2; $V/100" | bc`

if [ $V -eq 0 ]; then 
		echo -en "Versão do repo local: $red $VERSION (Não existe repo aqui) \n"
	else 
		echo -en "Versão do repo local: $green $VERSION \n"
fi
}

function assistir_versao {
ZERO=''
VAR=''
VAR=$1
begin=$(date +%s)
echo -en " Exibindo continuamente...Pressione $green 'q' $normal para sair!"
while true; do
   now=$(date +%s)
   diff=$(($now - $begin))
   mins=$(($diff / 60))
   secs=$(($diff % 60))
   hours=$(($diff / 3600))
#   days=$(($diff / 86400))

   # \r  is a "carriage return" - returns cursor to start of line
   # with \33[2K we clear the current line
    exibe_versao
   printf "\33[2K____________________________\nTempo de execução:  %02d:%02d:%02d\n $red (q) $normal -> sair" $hours $mins $secs
   if [ ! $VAR != '' ] ; then
	sleep 1 
   else
	sleep $1 
   fi

   #like a tput reset   (Limpar tela)
   echo -e '\0033\0143'

   # -n 1 to get one character at a time, -t 0.1 to set a timeout 
   read -n 1 -t 0.1 input                  # so read doesn't hang
   if [[ $input = "q" ]] || [[ $input = "Q" ]] 
   then
      echo # to get a newline after quitting
      break
   fi
done
}

function resetar_e_instalar_ultima_versao(){
	cdshell
	git checkout -f
	cdshell install
}




case $1 in
	# aqui para enviar o diretorio para instalacao como parametro e ja voltar no mesmo lugar que chamou
   "install" | "-i" | "--install") SAVEDIR=$PWD ; cd $CDSHELL ; . install.sh $SAVEDIR
         ;;

   "-v") echo -en "Versão do comando cdshell: 1.0.0 \n"
	 echo -en "Versão do Pacote CDSHELL: $green `cat $CDSHELL/backup/versao_ultima_instalacao.txt`\n $normal"
         ;;

   "--help") echo "Digite miniman cdshell"
	 ;;

   "-w") assistir_versao $2
	;;

   "reset"|"--reset"|"-r") resetar_e_instalar_ultima_versao
	;;

   "-v") exibe_versao 
	if [ ! -z $1  ]; then
		echo -en "O comando $red $1 $normal não existe."
	fi
      ;;

   "-g"|"--git"|--git-version) exibe_versao_git_local_version
      ;;
	
   "" ) exibe_versao_cdshell
      ;;
   
   * )echo -en "O comando $red $1 $normal não existe.\n"
      ;;
	
esac


